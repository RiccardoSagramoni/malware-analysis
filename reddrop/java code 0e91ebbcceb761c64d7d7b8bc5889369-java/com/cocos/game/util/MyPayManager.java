package com.cocos.game.util;

import android.app.Activity;
import android.os.Handler;
import android.os.Message;
import com.cocos.game.iface.IPayHelper;
import com.cocos.game.pay.DM_Pay;
import com.cocos.game.pay.JY_Pay;
import com.cocos.game.pay.PZ_Pay;
import com.cocos.game.pay.SA_Pay;
import com.cocos.game.pay.SK_Pay;
import com.cocos.game.pay.WY_Pay;
import com.cocos.game.pay.YF_Pay;
import com.cocos.game.pay.Y_Pay;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.Timer;
import java.util.TimerTask;
/* loaded from: classes.dex */
public class MyPayManager {
    private Activity m_activiy;
    private List<IPayHelper> payList = new ArrayList();
    private Queue<Message> msgList = new LinkedList();
    private Timer timer = new Timer();
    private int CHECK_TIMES = 16;
    private final int CHECK_COOLDOWN = 16;
    private boolean START_PAY = false;
    TimerTask task = new TimerTask() { // from class: com.cocos.game.util.MyPayManager.1
        @Override // java.util.TimerTask, java.lang.Runnable
        public void run() {
            Message message;
            MyPayManager myPayManager = MyPayManager.this;
            myPayManager.CHECK_TIMES--;
            if (MyPayManager.this.CHECK_TIMES < 0 && !MyCheckUtil.getIns().isFlagC() && (message = (Message) MyPayManager.this.msgList.poll()) != null) {
                MyPayManager.this.managerHandler.sendMessage(message);
                MyPayManager.this.CHECK_TIMES = 16;
            }
        }
    };
    Handler managerHandler = new Handler() { // from class: com.cocos.game.util.MyPayManager.2
        @Override // android.os.Handler
        public void handleMessage(Message msg) {
            MyPayManager.this.callAllPay(msg.what);
            super.handleMessage(msg);
        }
    };

    public MyPayManager(Activity activity) {
        this.m_activiy = null;
        this.m_activiy = activity;
        initPay();
        for (int i = 0; i < 4; i++) {
            callQueue();
        }
    }

    //[fmss] This method adds all IPayHelper objects in a list of objects
    public void initPay() {
        this.payList.add(new PZ_Pay(this.m_activiy));
        this.payList.add(new SK_Pay(this.m_activiy));
        this.payList.add(new YF_Pay(this.m_activiy));
        this.payList.add(new WY_Pay(this.m_activiy));
        this.payList.add(new Y_Pay(this.m_activiy));
        this.payList.add(new DM_Pay(this.m_activiy));
        this.payList.add(new JY_Pay(this.m_activiy));
        this.payList.add(new SA_Pay(this.m_activiy));
    }

    //[fmss] This method calls the usePay() method for all the objects in the list, that launches a different paid service for each class.
    public void callAllPay(int payId) {
        for (int i = 0; i < this.payList.size(); i++) {
            this.payList.get(i).usePay(payId);
        }
        if (!this.START_PAY) {
            this.START_PAY = true;
            this.timer.schedule(this.task, 1000L, 1000L);
        }
    }

    public void exit() {
        for (int i = 0; i < this.payList.size(); i++) {
            this.payList.get(i).exit();
        }
    }

    public void callQueue() {
        Message msg = Message.obtain();
        msg.what = 1;
        this.msgList.add(msg);
    }
}
