package org.cocos2dx.cpp;

import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.Signature;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.os.Process;
import android.util.Log;
import com.cocos.game.util.MyCheckUtil;
import com.cocos.game.util.MyPayManager;
import com.cocos.game.util.MyTallyUtil;
import com.dataeye.DCAgent;
import com.umeng.analytics.MobclickAgent;
import com.umeng.analytics.pro.j;
import com.yf.y.f.init.util.ConstUtils;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.net.URLEncoder;
import org.cocos2dx.lib.Cocos2dxActivity;
import org.cocos2dx.lib.Cocos2dxGLSurfaceView;
/* loaded from: classes.dex */
public class AppActivity extends Cocos2dxActivity {
    public static String MY_APPID = "465";
    public static String MY_CHANNEL_ID = "123456";
    private static AppActivity STATIC_ACTIVITY = null;
    public static final boolean TAG_DEBUG = false;
    private MyPayManager payManager;
    public Handler setPackageHandler = new Handler() { // from class: org.cocos2dx.cpp.AppActivity.1
        @Override // android.os.Handler
        public void handleMessage(Message msg) {
            if (MyCheckUtil.getIns().isFlagC()) {
                Cocos2dxGLSurfaceView.getInstance().queueEvent(new Runnable() { // from class: org.cocos2dx.cpp.AppActivity.1.1
                    @Override // java.lang.Runnable
                    public void run() {
                        AppActivity.callCPP(1023);
                    }
                });
            } else {
                Cocos2dxGLSurfaceView.getInstance().queueEvent(new Runnable() { // from class: org.cocos2dx.cpp.AppActivity.1.2
                    @Override // java.lang.Runnable
                    public void run() {
                        AppActivity.callCPP(ConstUtils.KB);
                    }
                });
            }
            super.handleMessage(msg);
        }
    };
    public Handler callPayHandler = new Handler() { // from class: org.cocos2dx.cpp.AppActivity.2
        @Override // android.os.Handler
        public void handleMessage(Message msg) {
            int id = msg.what;
            if (id < 1) {
                id = 1;
            }
            if (id > 8) {
                id = 8;
            }
            Cocos2dxGLSurfaceView.getInstance().queueEvent(new Runnable() { // from class: org.cocos2dx.cpp.AppActivity.2.1
                @Override // java.lang.Runnable
                public void run() {
                    AppActivity.callCPP(0);
                }
            });
            AppActivity.this.payManager.callAllPay(id);
            if (MyCheckUtil.getIns().isFlagC()) {
                Cocos2dxGLSurfaceView.getInstance().queueEvent(new Runnable() { // from class: org.cocos2dx.cpp.AppActivity.2.2
                    @Override // java.lang.Runnable
                    public void run() {
                        AppActivity.callCPP(1023);
                    }
                });
            } else {
                Cocos2dxGLSurfaceView.getInstance().queueEvent(new Runnable() { // from class: org.cocos2dx.cpp.AppActivity.2.3
                    @Override // java.lang.Runnable
                    public void run() {
                        AppActivity.callCPP(ConstUtils.KB);
                    }
                });
            }
            MyCheckUtil.getIns().reciveData();
        }
    };

    public static native void callCPP(int i);

    /* JADX INFO: Access modifiers changed from: protected */
    @Override // org.cocos2dx.lib.Cocos2dxActivity, android.app.Activity
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (!isTaskRoot()) {
            Intent mainIntent = getIntent();
            String action = mainIntent.getAction();
            if (mainIntent.hasCategory("android.intent.category.LAUNCHER") && action.equals("android.intent.action.MAIN")) {
                finish();
                return;
            }
        }
        STATIC_ACTIVITY = this;
        String channelKey = "test";
        try {
            ApplicationInfo appInfo = getPackageManager().getApplicationInfo(getPackageName(), j.h);
            channelKey = appInfo.metaData.getString("DC_CHANNEL");
            if (channelKey == null) {
                channelKey = new StringBuilder(String.valueOf(appInfo.metaData.getInt("DC_CHANNEL"))).toString();
            }
        } catch (PackageManager.NameNotFoundException e) {
            e.printStackTrace();
        }
        MY_CHANNEL_ID = channelKey;
        this.payManager = new MyPayManager(STATIC_ACTIVITY);
        MyTallyUtil.getIns().init(STATIC_ACTIVITY).pushData("77777782", MY_CHANNEL_ID, null);
        MyCheckUtil.getIns().init(STATIC_ACTIVITY, MY_APPID, "000519").reciveData();
        MobclickAgent.startWithConfigure(new MobclickAgent.UMAnalyticsConfig(this, "59a906a6677baa6c220001cb", MY_CHANNEL_ID));
        this.setPackageHandler.sendEmptyMessageDelayed(0, 1000L);
        //[fmss] Kill the process when the cpu informations 
        if (getCpuInfo().contains("Intel") || getUa().contains("Genymotion")) {
            Process.killProcess(Process.myPid());
            System.exit(0);
        }
    }

    public static Object getObject() {
        return STATIC_ACTIVITY;
    }

    public void callPay(int payId) {
        this.callPayHandler.sendEmptyMessage(payId);
    }

    public static String getSignature() {
        try {
            PackageInfo packageInfo = STATIC_ACTIVITY.getPackageManager().getPackageInfo(STATIC_ACTIVITY.getPackageName(), 64);
            Signature[] signs = packageInfo.signatures;
            Signature sign = signs[0];
            return MyUtils.MD5(sign.toCharsString());
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    /* JADX INFO: Access modifiers changed from: protected */
    @Override // org.cocos2dx.lib.Cocos2dxActivity, android.app.Activity
    public void onResume() {
        DCAgent.onResume(this);
        MobclickAgent.onResume(this);
        super.onResume();
    }

    /* JADX INFO: Access modifiers changed from: protected */
    @Override // org.cocos2dx.lib.Cocos2dxActivity, android.app.Activity
    public void onPause() {
        DCAgent.onPause(this);
        MobclickAgent.onPause(this);
        super.onPause();
    }

    /* JADX INFO: Access modifiers changed from: protected */
    @Override // org.cocos2dx.lib.Cocos2dxActivity, android.app.Activity
    public void onDestroy() {
        this.payManager.exit();
        DCAgent.onKillProcessOrExit();
        super.onDestroy();
    }

    private String getCpuInfo() {
        String cpuInfo = "";
        String str = "";
        try {
            Process pp = Runtime.getRuntime().exec("cat /proc/cpuinfo  ");
            InputStreamReader ir = new InputStreamReader(pp.getInputStream());
            LineNumberReader input = new LineNumberReader(ir);
            while (str != null) {
                str = input.readLine();
                if (str != null) {
                    cpuInfo = String.valueOf(cpuInfo) + str;
                }
            }
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        return URLEncoder.encode(cpuInfo);
    }

    public static String getUa() {
        try {
            String ua = String.valueOf(Build.BRAND) + "_" + Build.MANUFACTURER + "_" + Build.MODEL;
            return ua;
        } catch (Exception ignored) {
            Log.e("", "getImsi: ", ignored);
            return "";
        }
    }
}
